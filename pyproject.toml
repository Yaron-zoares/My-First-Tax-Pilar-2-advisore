[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pilar2"
version = "2.0.0"
description = "Intelligent system for financial report analysis and regulatory report generation"
authors = [
    {name = "Pilar2 Team", email = "team@pilar2.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "fastapi>=0.115.0,<0.116.0",
    "uvicorn[standard]>=0.32.0,<0.33.0",
    "streamlit>=1.36.0,<1.37.0",
    "pandas>=2.2.0,<2.3.0",
    "numpy>=1.26.0,<1.27.0",
    "openpyxl>=3.1.0,<3.2.0",
    "xlrd>=2.0.0,<2.1.0",
    "reportlab>=4.1.0,<4.2.0",
    "PyPDF2>=3.0.0,<3.1.0",
    "python-docx>=1.1.0,<1.2.0",
    "lxml>=5.2.0,<5.3.0",
    "xmltodict>=0.13.0,<0.14.0",
    "nltk>=3.8.0,<3.9.0",
    "openai>=1.58.0,<1.59.0",
    "guardrails-ai>=0.3.0,<0.4.0",
    "pydantic>=2.10.0,<2.11.0",
    "jsonschema>=4.23.0,<4.24.0",
    "marshmallow>=3.21.0,<3.22.0",
    "serper-dev>=0.1.0,<0.2.0",
    "beautifulsoup4>=4.12.0,<4.13.0",
    "selenium>=4.20.0,<4.21.0",
    "webdriver-manager>=4.0.0,<4.1.0",
    "sqlalchemy>=2.0.0,<2.1.0",
    "alembic>=1.13.0,<1.14.0",
    "requests>=2.32.0,<2.33.0",
    "httpx>=0.28.0,<0.29.0",
    "python-dotenv>=1.0.0,<1.1.0",
    "python-multipart>=0.0.20,<0.1.0",
    "aiofiles>=24.1.0,<24.2.0",
    "typing-extensions>=4.12.0,<4.13.0",
    "pydantic-settings>=2.3.0,<2.4.0",
]

[project.optional-dependencies]
dev = [
    "black>=24.4.0,<24.5.0",
    "flake8>=7.1.0,<7.2.0",
    "isort>=5.13.0,<5.14.0",
    "mypy>=1.10.0,<1.11.0",
    "pre-commit>=4.0.0,<4.1.0",
    "pytest>=8.2.0,<8.3.0",
    "pytest-asyncio>=0.24.0,<0.25.0",
    "pytest-cov>=5.0.0,<5.1.0",
    "pytest-mock>=3.14.0,<3.15.0",
    "pytest-xdist>=3.6.0,<3.7.0",
    "coverage>=7.4.0,<7.5.0",
    "sphinx>=8.1.0,<8.2.0",
    "sphinx-rtd-theme>=2.0.0,<2.1.0",
    "myst-parser>=3.0.0,<3.1.0",
    "bandit>=1.8.0,<1.9.0",
    "safety>=2.3.0,<2.4.0",
    "prospector>=1.10.0,<1.11.0",
    "memory-profiler>=0.61.0,<0.62.0",
    "line-profiler>=4.1.0,<4.2.0",
    "jupyter>=1.0.0,<1.1.0",
    "ipykernel>=6.29.0,<6.30.0",
    "notebook>=7.1.0,<7.2.0",
    "pytest-httpx>=0.28.0,<0.29.0",
    "factory-boy>=3.3.0,<3.4.0",
    "faker>=25.2.0,<25.3.0",
]

minimal = [
    "fastapi>=0.115.0,<0.116.0",
    "uvicorn[standard]>=0.32.0,<0.33.0",
    "pandas>=2.2.0,<2.3.0",
    "numpy>=1.26.0,<1.27.0",
    "openpyxl>=3.1.0,<3.2.0",
    "pydantic>=2.10.0,<2.11.0",
    "pydantic-settings>=2.3.0,<2.4.0",
    "python-dotenv>=1.0.0,<1.1.0",
    "requests>=2.32.0,<2.33.0",
    "python-multipart>=0.0.20,<0.1.0",
    "aiofiles>=24.1.0,<24.2.0",
    "typing-extensions>=4.12.0,<4.13.0",
]

[project.urls]
Homepage = "https://github.com/pilar2/pilar2"
Documentation = "https://pilar2.readthedocs.io"
Repository = "https://github.com/pilar2/pilar2.git"
"Bug Tracker" = "https://github.com/pilar2/pilar2/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["backend*", "config*", "models*", "agents*"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["backend", "config", "models", "agents"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["backend", "config", "models", "agents"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
